{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siva1\\\\document_qa_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//import './App.css';  // Ensure you have this file or remove if not needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [docId, setDocId] = useState('');\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        // Log the status and text for debugging\n        console.error('Response status:', response.status);\n        console.error('Response text:', await response.text());\n        throw new Error('Upload failed');\n      }\n      const result = await response.json();\n      console.log('Response JSON:', result);\n      setDocId(result.doc_id);\n      alert('Document uploaded successfully! Document ID: ' + result.doc_id);\n    } catch (error) {\n      console.error('Error uploading document:', error);\n      alert('Error uploading document. Please try again.');\n    }\n  };\n  const handleQuestionSubmit = async () => {\n    if (!docId || !question) {\n      alert('Please upload a document and enter a question.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          doc_id: docId,\n          question: question\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get an answer');\n      }\n      const result = await response.json();\n      setAnswer(result.answer);\n    } catch (error) {\n      console.error('Error fetching answer:', error);\n      alert('Error fetching answer. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Document QA App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        placeholder: \"Ask a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuestionSubmit,\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"CX3MdvJ4TRLi9rrebOPYHxJ+lL0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","file","setFile","docId","setDocId","question","setQuestion","answer","setAnswer","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","ok","console","error","status","text","Error","result","json","log","doc_id","handleQuestionSubmit","headers","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","value","e","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/siva1/document_qa_app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n//import './App.css';  // Ensure you have this file or remove if not needed\r\n\r\nfunction App() {\r\n    const [file, setFile] = useState(null);\r\n    const [docId, setDocId] = useState('');\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            alert('Please select a file first.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/upload', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                // Log the status and text for debugging\r\n                console.error('Response status:', response.status);\r\n                console.error('Response text:', await response.text());\r\n                throw new Error('Upload failed');\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log('Response JSON:', result);\r\n            setDocId(result.doc_id);\r\n            alert('Document uploaded successfully! Document ID: ' + result.doc_id);\r\n        } catch (error) {\r\n            console.error('Error uploading document:', error);\r\n            alert('Error uploading document. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleQuestionSubmit = async () => {\r\n        if (!docId || !question) {\r\n            alert('Please upload a document and enter a question.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/ask', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    doc_id: docId,\r\n                    question: question,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to get an answer');\r\n            }\r\n\r\n            const result = await response.json();\r\n            setAnswer(result.answer);\r\n        } catch (error) {\r\n            console.error('Error fetching answer:', error);\r\n            alert('Error fetching answer. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Document QA App</h1>\r\n            <div>\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button onClick={handleUpload}>Upload Document</button>\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={question}\r\n                    onChange={(e) => setQuestion(e.target.value)}\r\n                    placeholder=\"Ask a question\"\r\n                />\r\n                <button onClick={handleQuestionSubmit}>Submit Question</button>\r\n            </div>\r\n            {answer && (\r\n                <div>\r\n                    <h2>Answer:</h2>\r\n                    <p>{answer}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}