{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siva1\\\\document_qa_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [docId, setDocId] = useState('');\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      setDocId(result.doc_id);\n      alert('Document uploaded successfully! Document ID: ' + result.doc_id);\n    } catch (error) {\n      console.error('Error uploading document:', error);\n    }\n  };\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  const handleAsk = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          doc_id: docId,\n          question: question\n        })\n      });\n      const result = await response.json();\n      setAnswer(result.answer);\n    } catch (error) {\n      console.error('Error asking question:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Document QA App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), docId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ask a Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        onChange: handleQuestionChange,\n        placeholder: \"Enter your question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAsk,\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CX3MdvJ4TRLi9rrebOPYHxJ+lL0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","file","setFile","docId","setDocId","question","setQuestion","answer","setAnswer","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","result","json","doc_id","alert","error","console","handleQuestionChange","value","handleAsk","headers","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/siva1/document_qa_app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [docId, setDocId] = useState('');\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const result = await response.json();\r\n      setDocId(result.doc_id);\r\n      alert('Document uploaded successfully! Document ID: ' + result.doc_id);\r\n    } catch (error) {\r\n      console.error('Error uploading document:', error);\r\n    }\r\n  };\r\n\r\n  const handleQuestionChange = (event) => {\r\n    setQuestion(event.target.value);\r\n  };\r\n\r\n  const handleAsk = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/ask', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          doc_id: docId,\r\n          question: question,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      setAnswer(result.answer);\r\n    } catch (error) {\r\n      console.error('Error asking question:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Document QA App</h1>\r\n\r\n      <div>\r\n        <h2>Upload Document</h2>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {docId && (\r\n        <div>\r\n          <h2>Ask a Question</h2>\r\n          <input type=\"text\" value={question} onChange={handleQuestionChange} placeholder=\"Enter your question\" />\r\n          <button onClick={handleAsk}>Ask</button>\r\n        </div>\r\n      )}\r\n\r\n      {answer && (\r\n        <div>\r\n          <h2>Answer</h2>\r\n          <p>{answer}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}